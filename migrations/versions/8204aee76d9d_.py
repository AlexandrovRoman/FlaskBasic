"""empty message

Revision ID: 8204aee76d9d
Revises: 
Create Date: 2020-06-20 14:47:02.582065

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '8204aee76d9d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('course_type', sa.String(length=20), nullable=True),
                    sa.Column('course_name', sa.String(length=70), nullable=True),
                    sa.Column('start', sa.Date(), nullable=True),
                    sa.Column('end', sa.Date(), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('image', sa.Binary(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('news',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('title', sa.String(length=40), nullable=True),
                    sa.Column('preview', sa.String(length=80), nullable=True),
                    sa.Column('description', sa.String(), nullable=True),
                    sa.Column('date', sa.DateTime(), nullable=True),
                    sa.Column('tags', sa.String(), nullable=True),
                    sa.Column('image', sa.Binary(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('organization',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=80), nullable=True),
                    sa.Column('creation_date', sa.Date(), nullable=True),
                    sa.Column('owner_id', sa.Integer(), nullable=True),
                    sa.Column('org_type', sa.String(), nullable=True),
                    sa.Column('org_desc', sa.String(), nullable=True),
                    sa.Column('api_token', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('user',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.String(length=80), nullable=True),
                    sa.Column('surname', sa.String(length=80), nullable=True),
                    sa.Column('fathername', sa.String(length=80), nullable=True),
                    sa.Column('email', sa.String(length=40), nullable=True),
                    sa.Column('confirmed', sa.Boolean(), nullable=False),
                    sa.Column('hashed_password', sa.String(), nullable=True),
                    sa.Column('birth_date', sa.Date(), nullable=True),
                    sa.Column('sex', sa.String(length=7), nullable=True),
                    sa.Column('marriage', sa.String(length=20), nullable=True),
                    sa.Column('grate', sa.String(), nullable=True),
                    sa.Column('education', sa.String(), nullable=True),
                    sa.Column('foreign_languges', sa.String(), nullable=True),
                    sa.Column('start_place', sa.String(), nullable=True),
                    sa.Column('nationality', sa.String(), nullable=True),
                    sa.Column('about_myself', sa.String(), nullable=True),
                    sa.Column('post', sa.String(), nullable=True),
                    sa.Column('restore_token', sa.String(), nullable=True),
                    sa.Column('work_department_id', sa.Integer(), nullable=True),
                    sa.Column('salary', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['work_department_id'], ['organization.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('t2',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('org_name_prop', sa.String(), nullable=True),
                    sa.Column('linked_user_id', sa.Integer(), nullable=True),
                    sa.Column('compile_date', sa.Date(), nullable=True),
                    sa.Column('service_number', sa.Integer(), nullable=True),
                    sa.Column('taxpayer_id_number', sa.String(), nullable=True),
                    sa.Column('pension_insurance_certificate', sa.String(), nullable=True),
                    sa.Column('work_nature', sa.String(), nullable=True),
                    sa.Column('work_kind', sa.String(), nullable=True),
                    sa.Column('employment_contract_id', sa.Integer(), nullable=True),
                    sa.Column('employment_contract_date', sa.Date(), nullable=True),
                    sa.Column('birthdate', sa.Date(), nullable=True),
                    sa.Column('birthplace', sa.String(), nullable=True),
                    sa.Column('birthplace_okato', sa.String(), nullable=True),
                    sa.Column('nationality', sa.String(), nullable=True),
                    sa.Column('nationality_okin', sa.String(), nullable=True),
                    sa.Column('foreign_language_knowledge', sa.String(), nullable=True),
                    sa.Column('foreign_language_knowledge_okin', sa.String(), nullable=True),
                    sa.Column('education', sa.String(), nullable=True),
                    sa.Column('education_okin', sa.String(), nullable=True),
                    sa.Column('education_list', sa.String(), nullable=True),
                    sa.Column('profession', sa.String(), nullable=True),
                    sa.Column('profession_code', sa.String(), nullable=True),
                    sa.Column('profession_other', sa.String(), nullable=True),
                    sa.Column('profession_other_code', sa.String(), nullable=True),
                    sa.Column('experience_checked', sa.Date(), nullable=True),
                    sa.Column('experience', sa.String(), nullable=True),
                    sa.Column('marriage_okin', sa.String(), nullable=True),
                    sa.Column('family', sa.String(), nullable=True),
                    sa.Column('passport_id', sa.String(), nullable=True),
                    sa.Column('passport_given', sa.Date(), nullable=True),
                    sa.ForeignKeyConstraint(['linked_user_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('vacancy',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('org_id', sa.Integer(), nullable=True),
                    sa.Column('worker_id', sa.Integer(), nullable=True),
                    sa.Column('salary', sa.Integer(), nullable=True),
                    sa.Column('title', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['org_id'], ['organization.id'], ),
                    sa.ForeignKeyConstraint(['worker_id'], ['user.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('resume',
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('vacancy_id', sa.Integer(), nullable=True),
                    sa.Column('user_id', sa.Integer(), nullable=True),
                    sa.Column('title', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
                    sa.ForeignKeyConstraint(['vacancy_id'], ['vacancy.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resume')
    op.drop_table('vacancy')
    op.drop_table('t2')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('organization')
    op.drop_table('news')
    op.drop_table('course')
    # ### end Alembic commands ###
